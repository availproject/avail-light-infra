name: Common

on:
  workflow_call:
    inputs:
      network:
        required: true
        type: string

    secrets:
      datadog_api_key:
        required: false
      aws_access_key_id:
        required: true
      aws_secret_access_key:
        required: true
      slack_webhook:
        required: true

env:
  NETWORK: ${{ inputs.network }}
  DATADOG_API_KEY: ${{ secrets.datadog_api_key }}
  FORCE_COLOR: "1"
  GITHUB_WORKFLOW_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
  SLACK_WEBHOOK: ${{ secrets.slack_webhook }}

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform/deployments/${{ env.NETWORK }}
   
    steps:
    - name: checkout code
      uses: actions/checkout@v3

    - name: configure aws creds
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-region: eu-west-1
        aws-access-key-id: ${{ secrets.aws_access_key_id }}
        aws-secret-access-key: ${{ secrets.aws_secret_access_key }}

    - name: terraform init
      run: terraform init && exit 1

    - name: terraform plan
      run: terraform plan

    - name: terraform apply
      run: terraform apply --auto-approve

    - name: upload ssh key
      uses: actions/upload-artifact@v4
      with:
        name: ansible-files
        path: |
          ansible/${{ env.NETWORK }}_key
          ansible/inventory/${{ env.NETWORK }}.ini

  ansible:
    runs-on: ubuntu-latest
    needs: terraform
    env:
      ANSIBLE_FORCE_COLOR: "true"
    defaults:
      run:
        working-directory: ansible

    steps:
    - name: checkout code
      uses: actions/checkout@v3

    - name: download ssh key
      uses: actions/download-artifact@v4
      with:
        name: ansible-files
        path: ansible

    - name: show ansible files exists
      run: |
        chmod 0600 ${{ env.NETWORK }}_key
        ls -lash
        cat inventory/${{ env.NETWORK }}.ini

    - name: view ansible inventory
      run: ansible-inventory --inventory inventory/${{ env.NETWORK }}.ini --list

    - name: ping all
      run: ansible all -m ping --inventory inventory/${{ env.NETWORK }}.ini
  
    - name: run playbook
      run: ansible-playbook playbook.yml --inventory inventory/${{ env.NETWORK }}.ini
    
  #   - name: Setup upterm session
  #     uses: lhotari/action-upterm@v1
  #     if: ${{ failure() }}
  #     with:
  #       wait-timeout-minutes: 2

  notify-on-failure:
    needs: [ansible, terraform]
    runs-on: ubuntu-latest
    if: failure()
    steps:
    - name: Notify failure
      run: |
        echo "Job failed, sending notification."
        curl -X POST -H 'Content-type: application/json' --data '{"text":"Build Failed: ${{ env.GITHUB_WORKFLOW_URL }} "}' ${{ secrets.slack_webhook }}
  